plugins {
    id 'java'
    id "org.sonarqube" version "3.4.0.2513"
    id 'checkstyle'
}

apply plugin: 'checkstyle'
apply plugin: 'org.sonarqube'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    maven { url 'https://maven.aliyun.com/repository/google/' }
    maven { url 'https://maven.aliyun.com/repository/jcenter/' }
    mavenCentral()
}

dependencies {
    implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.+'
    implementation 'org.apache.logging.log4j:log4j-core:2.+'
    implementation 'org.apache.logging.log4j:log4j-jul:2.+'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.+'
    // https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
    implementation 'com.rabbitmq:amqp-client:5.+'
    // https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.+'
    // https://mvnrepository.com/artifact/org.bouncycastle/bcpg-jdk15on
    implementation 'org.bouncycastle:bcpg-jdk15on:1.+'


    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.+'
}

test {
    useJUnitPlatform()
}
allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "javastudy"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_ccaf11520a999d21753b8a2f2e2602c5d43f7914"
        // 需要本地调用 gradle sonarqube 时请打开下方注释，确保分析结果会在当前分支呈现。
        // 注意，本地调用 gradle sonarqube 会导致 SonarQube 服务器上对应分支的分析报告变为您当前 IDE 上代码的分析，包括未提交的变更。
        // property "sonar.branch.name", gitBranch()
        // 如果您不负责 CMO 相关职责，请不要将本部分注释的变更提交到远程代码库中。
    }
}

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

task branch {
    def branch = gitBranch()
    println branch
    println branch
}